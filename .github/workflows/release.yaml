name: Release

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - 'main'

jobs:
  release:
    runs-on: ubuntu-22.04

    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2

      - name: Create build timestamp
        id: timestamp
        run: echo "::set-output name=timestamp::$(date "+%Y%m%d.%H%M")"

      - name: Collect image metadata
        id: image
        env:
          IMAGE_ID: epa-github-kpi-service
        run: |
          OWNER=$(echo ${{ github.repository_owner }} | tr '[A-Z]' '[a-z]')
          echo "::set-output name=image::ghcr.io/$OWNER/$IMAGE_ID"
          echo "::set-output name=timestamp_tag::ghcr.io/$OWNER/$IMAGE_ID:${{ steps.timestamp.outputs.timestamp }}"
          echo "::set-output name=latest_tag::ghcr.io/$OWNER/$IMAGE_ID:latest"

      - name: Build Container Image
        run: docker build . -t gitlab-java-microservice:latest -t gitlab-java-microservice:${{ steps.timestamp.outputs.timestamp }}

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push image
        run: docker push ${{ steps.image.outputs.image }} --all-tags

      - name: Create tag
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.timestamp.outputs.timestamp }}',
              sha: context.sha
            })
